/*
Klarna Checkout API V3

The checkout API is used to create a checkout with Klarna and update the checkout order during the purchase. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).\\n\\nRead more on [Klarna checkout](https://docs.klarna.com/klarna-checkout/).

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ProductIdentifiers } from './product-identifiers';
import { ShippingAttributes } from './shipping-attributes';
import { Subscription } from './subscription';

/**
 * 
 * @export
 * @interface OrderLine
 */
export interface OrderLine {
    /**
     * Type of the order line item. The possible values are:<ul><li><em>physical (physical good)</em></li><li><em>discount</em></li><li><em>shipping_fee</em></li><li><em>sales_tax (depends on the country/city, usually called VAT)</em></li><li><em>digital (digital good)</em></li><li><em>gift_card</em></li><li><em>store_credit (credit from the merchant)</em></li><li><em>surcharge (extra charge)</em></li></ul>
     * @type {string}
     * @memberof OrderLine
     */
    'type'?: string;
    /**
     * Article number, SKU or similar. (max 255 characters)
     * @type {string}
     * @memberof OrderLine
     */
    'reference'?: string;
    /**
     * Descriptive name of the order line item (max 255 characters)
     * @type {string}
     * @memberof OrderLine
     */
    'name': string;
    /**
     * Non-negative number. Quantity of the order line item.
     * @type {number}
     * @memberof OrderLine
     */
    'quantity': number;
    /**
     * 
     * @type {Subscription}
     * @memberof OrderLine
     */
    'subscription'?: Subscription;
    /**
     * Unit used to describe the quantity, e.g. kg, pcs... If defined has to be 1-8 characters
     * @type {string}
     * @memberof OrderLine
     */
    'quantity_unit'?: string;
    /**
     * Minor units. Includes tax, excludes discount. (max value: 100000000).  Example: 100 Euros should be 10000.
     * @type {number}
     * @memberof OrderLine
     */
    'unit_price': number;
    /**
     * Non-negative value. The percentage value is represented with two implicit decimals. (max 10000)  Example: 25% should be 2500.
     * @type {number}
     * @memberof OrderLine
     */
    'tax_rate': number;
    /**
     * Minor units. Includes tax and discount.   Example: 25 euros should be 2500 Value = (quantity x unit_price) - total_discount_amount. (max value: 100000000)
     * @type {number}
     * @memberof OrderLine
     */
    'total_amount': number;
    /**
     * Non-negative minor units. Includes tax.  Example: 25 euros should be 2500
     * @type {number}
     * @memberof OrderLine
     */
    'total_discount_amount'?: number;
    /**
     * Must be within Â±1 of total_amount - total_amount \\* 10000 / (10000 + tax_rate). Negative when type is discount.
     * @type {number}
     * @memberof OrderLine
     */
    'total_tax_amount': number;
    /**
     * Property used to store additional metadata per item that will be returned whenever an order is read from Klarna. Pass through field. (max 1024 characters).
     * @type {string}
     * @memberof OrderLine
     */
    'merchant_data'?: string;
    /**
     * URL to the product page that can be later embedded in communications between Klarna and the customer. (max 1024 characters)
     * @type {string}
     * @memberof OrderLine
     */
    'product_url'?: string;
    /**
     * URL to an image that can be later embedded in communications between Klarna and the customer. (max 1024 characters)  Improves post-purchase customer experiences.
     * @type {string}
     * @memberof OrderLine
     */
    'image_url'?: string;
    /**
     * 
     * @type {ProductIdentifiers}
     * @memberof OrderLine
     */
    'product_identifiers'?: ProductIdentifiers;
    /**
     * 
     * @type {ShippingAttributes}
     * @memberof OrderLine
     */
    'shipping_attributes'?: ShippingAttributes;
}

